{"version":3,"file":"component---src-pages-index-tsx-979c4cd6e785e70e4e40.js","mappings":"6LAGA,MA8DaA,EAAO,IAAMC,EAAAA,cAAAA,QAAAA,KAAO,aAEjC,UAhEkB,KAChB,MAYMC,GAZOC,EAAAA,EAAAA,gBAAe,cAYTC,YAAYC,MAEzBC,EAAkB,SAACJ,EAAiBK,QAAU,IAAVA,IAAAA,EAAa,KACrD,MAAMC,EAAwC,CAAC,EAgB/C,OAdAN,EAAMO,SAASC,IAEb,GAAa,MADbA,EAAOA,EAAKC,WAAW,KAAOD,EAAKE,MAAM,GAAKF,IACjB,MAATA,EAAc,OAClC,MAAOG,KAAWC,GAAaJ,EAAKK,MAAM,KAErCP,EAAaK,KAChBL,EAAaK,GAAU,IAGG,KAAxBC,EAAUE,KAAK,MAEnBR,EAAaK,GAAQI,KAAKH,EAAUE,KAAK,KAAK,IAI9Cf,EAAAA,cAAAA,KAAAA,KACGiB,OAAOC,QAAQX,GAAcY,KAAIC,IAA0B,IAAxBR,EAAQS,GAAW,EACrD,OACErB,EAAAA,cAAAA,KAAAA,CAAIsB,IAAKV,GACPZ,EAAAA,cAACuB,EAAAA,KAAI,CAACC,GAAE,GAAKlB,EAAaM,GAAWA,GACpCP,EAAgBgB,EAAY,GAAGf,EAAaM,EAAM,KAChD,IAKf,EAEA,OACEZ,EAAAA,cAAAA,OAAAA,KACEA,EAAAA,cAAAA,KAAAA,KAAI,QAGJA,EAAAA,cAAAA,KAAAA,KAAI,YACHK,EACCJ,EAAMkB,KAAKM,GAAyBA,EAAKhB,OACtCiB,QAAQjB,GAAiBA,EAAKC,WAAW,gBACzCS,KAAKV,GAAiBA,EAAKE,MAAM,MACpC,cAEG,C","sources":["webpack://playground-gatsby/./src/pages/index.tsx"],"sourcesContent":["import React, { ReactElement } from \"react\"\r\nimport { graphql, Link, useStaticQuery } from \"gatsby\"\r\n\r\nconst IndexPage = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      allSitePage(\r\n        sort: { fields: [path], order: ASC }\r\n      ) {\r\n        nodes {\r\n          path\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const pages = data.allSitePage.nodes;\r\n\r\n  const buildNavigation = (pages: string[], parentPath = '/'): ReactElement => {\r\n    const groupedPaths: {[k: string]: string[]} = {};\r\n\r\n    pages.forEach((path) => {\r\n      path = path.startsWith('/') ? path.slice(1) : path;\r\n      if (path === '' ||  path === '/') return;\r\n      const [prefix, ...component] = path.split('/');\r\n\r\n      if (!groupedPaths[prefix]) {\r\n        groupedPaths[prefix] = [];\r\n      }\r\n\r\n      if (component.join('/') === '') return;\r\n\r\n      groupedPaths[prefix].push(component.join('/'));\r\n    });\r\n\r\n    return (\r\n      <ul>\r\n        {Object.entries(groupedPaths).map(([prefix, components]) => {\r\n          return (\r\n            <li key={prefix}>\r\n              <Link to={`${parentPath}${prefix}`}>{prefix}</Link>\r\n              {buildNavigation(components, `${parentPath}${prefix}/`)}\r\n            </li>\r\n          )\r\n        })}\r\n      </ul>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <h1>Home</h1>\r\n\r\n\r\n      <h3>Sketches</h3>\r\n      {buildNavigation(\r\n        pages.map((page: {path: string}) => page.path)\r\n          .filter((path: string) => path.startsWith(\"/sketches/\"))\r\n          .map((path: string) => path.slice(10)),\r\n        \"/sketches/\"\r\n      )}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport const Head = () => <title>Home Page</title>\r\n\r\nexport default IndexPage"],"names":["Head","React","pages","useStaticQuery","allSitePage","nodes","buildNavigation","parentPath","groupedPaths","forEach","path","startsWith","slice","prefix","component","split","join","push","Object","entries","map","_ref","components","key","Link","to","page","filter"],"sourceRoot":""}