{"version":3,"file":"component---src-pages-404-tsx-37af69e4414f730750f4.js","mappings":"mLA6BA,MAtBeA,IAAAA,IAAC,UAAEC,GAAsB,SACtCC,EAAAA,cAAAA,SAAAA,CACEC,MAAO,CACLC,OAAO,SACPC,QAAQ,oCACRC,QAAQ,OACRC,WAAW,SACXC,eAAe,kBAGjBN,EAAAA,cAACO,EAAAA,KAAI,CACHC,GAAG,IACHP,MAAO,CACLQ,SAAS,iBACTC,eAAe,SAGhBX,GAEI,ECwBX,MArCeD,IAA4C,IAAD,MAA1C,SAAEa,GAAmC,EACnD,MAAMC,GAAOC,EAAAA,EAAAA,gBAAe,cAU5B,OACEb,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAACc,EAAM,CAACf,WAAiC,QAAtB,EAAAa,EAAKG,KAAKC,oBAAY,aAAtBC,EAAwBC,QAAK,UAChDlB,EAAAA,cAAAA,MAAAA,CACEC,MAAO,CACLC,OAAO,SACPiB,SAAS,sBACThB,QAAQ,uBAGVH,EAAAA,cAAAA,OAAAA,KAAOW,GACPX,EAAAA,cAAAA,SAAAA,CACEC,MAAO,CACLmB,UAAU,iBACVX,SAAS,mBAEZ,MACI,IAAIY,MAAOC,cAAc,gBAC5B,IACAtB,EAAAA,cAAAA,IAAAA,CAAGuB,KAAK,4BAA2B,YAGtC,C,gICIP,MAlCYzB,IAAiD,IAAD,QAA/C,YAAE0B,EAAW,MAAEN,EAAK,SAAEP,GAAoB,EACrD,MAAM,KAAEI,IAASF,EAAAA,EAAAA,gBAAe,YAc1BY,EAAkBD,GAAeT,EAAKC,aAAaQ,YACnDE,EAAgC,QAApB,EAAGX,EAAKC,oBAAY,aAAjBW,EAAmBT,MAExC,OACElB,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,QAAAA,KAAQ0B,EAAkBR,EAAK,MAAMQ,EAAiBR,GACtDlB,EAAAA,cAAAA,OAAAA,CAAM4B,KAAK,cAAcC,QAASJ,IAClCzB,EAAAA,cAAAA,OAAAA,CAAM8B,SAAS,WAAWD,QAASX,IACnClB,EAAAA,cAAAA,OAAAA,CAAM8B,SAAS,iBAAiBD,QAASJ,IACzCzB,EAAAA,cAAAA,OAAAA,CAAM8B,SAAS,UAAUD,QAAQ,YACjC7B,EAAAA,cAAAA,OAAAA,CAAM4B,KAAK,eAAeC,QAAQ,YAClC7B,EAAAA,cAAAA,OAAAA,CAAM4B,KAAK,kBAAkBC,SAA0B,QAAjB,EAAAd,EAAKC,oBAAY,aAAjBe,EAAmBC,SAAM,KAC/DhC,EAAAA,cAAAA,OAAAA,CAAM4B,KAAK,gBAAgBC,QAASX,IACpClB,EAAAA,cAAAA,OAAAA,CAAM4B,KAAK,sBAAsBC,QAASJ,IACzCd,EACA,EC1CP,MAOasB,EAAO,IAAMjC,EAAAA,cAACkC,EAAG,CAAChB,MAAO,mBAEtC,MATqB,IACnBlB,EAAAA,cAACmC,EAAAA,EAAM,KACLnC,EAAAA,cAAAA,KAAAA,KAAI,kBACJA,EAAAA,cAAAA,IAAAA,KAAG,2D","sources":["webpack://playground-gatsby/./src/components/header.tsx","webpack://playground-gatsby/./src/components/layout.tsx","webpack://playground-gatsby/./src/components/seo.tsx","webpack://playground-gatsby/./src/pages/404.tsx"],"sourcesContent":["import { Link } from \"gatsby\"\r\nimport React from \"react\"\r\n\r\ninterface HeadProps {\r\n  siteTitle: string\r\n}\r\n\r\nconst Header = ({ siteTitle }: HeadProps) => (\r\n  <header\r\n    style={{\r\n      margin: `0 auto`,\r\n      padding: `var(--space-4) var(--size-gutter)`,\r\n      display: `flex`,\r\n      alignItems: `center`,\r\n      justifyContent: `space-between`,\r\n    }}\r\n  >\r\n    <Link\r\n      to=\"/\"\r\n      style={{\r\n        fontSize: `var(--font-sm)`,\r\n        textDecoration: `none`,\r\n      }}\r\n    >\r\n      {siteTitle}\r\n    </Link>\r\n  </header>\r\n)\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\nimport \"./layout.css\"\r\nimport React, { ReactNode } from \"react\"\r\n\r\nconst Layout = ({ children }: { children: ReactNode }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\r\n      <div\r\n        style={{\r\n          margin: `0 auto`,\r\n          maxWidth: `var(--size-content)`,\r\n          padding: `var(--size-gutter)`,\r\n        }}\r\n      >\r\n        <main>{children}</main>\r\n        <footer\r\n          style={{\r\n            marginTop: `var(--space-5)`,\r\n            fontSize: `var(--font-sm)`,\r\n          }}\r\n        >\r\n          Â© {new Date().getFullYear()} &middot; Built with\r\n          {` `}\r\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\r\n        </footer>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport React from \"react\"\r\n\r\ninterface SeoProps {\r\n  description?: string\r\n  title?: string\r\n  children?: React.ReactNode\r\n}\r\n\r\nconst Seo = ({ description, title, children }: SeoProps) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n","import React from \"react\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst NotFoundPage = () => (\r\n  <Layout>\r\n    <h1>404: Not Found</h1>\r\n    <p>You just hit a route that doesn't exist... the sadness.</p>\r\n  </Layout>\r\n)\r\n\r\nexport const Head = () => <Seo title={\"404: Not Found\"} />\r\n\r\nexport default NotFoundPage\r\n"],"names":["_ref","siteTitle","React","style","margin","padding","display","alignItems","justifyContent","Link","to","fontSize","textDecoration","children","data","useStaticQuery","Header","site","siteMetadata","_data$site$siteMetada","title","maxWidth","marginTop","Date","getFullYear","href","description","metaDescription","defaultTitle","_site$siteMetadata","name","content","property","_site$siteMetadata2","author","Head","Seo","Layout"],"sourceRoot":""}